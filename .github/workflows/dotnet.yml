# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
jobs:
  version:
    
    runs-on: ubuntu-latest
   
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Increment Commit Tag
        id: version-tag
        run: |
          current_tag=$(git describe --abbrev=0 --tags)
          echo current tag: $current_tag
          major=$(echo $current_tag | cut -d "." -f 1 | cut -d "v" -f 2)
          minor=$(echo $current_tag | cut -d "." -f 2)
          patch=$(echo $current_tag | cut -d "." -f 3)
          new_patch=$((patch + 1))
          new_tag="v$major.$minor.$new_patch"
          package_version="$major.$minor.$new_patch"
          git tag $new_tag
          git push --tags
          echo "PACKAGE_VERSION=$package_version" > version.txt
      - name: upload version
        uses: actions/upload-artifact@v1
        with: 
          name: version
          path: version.txt
  
  build:
    needs: version
    runs-on: ubuntu-latest
  
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
  
  pack: 
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: download version
      uses: action/download-artifact@v1
      with:
        name: version
    - shell: bash
      run: |
        package_version=cat version/version.txt
        echo "package version: $package_version"
    - name: Build 
      run: |
        echo "new package version: $package_version
        dotnet pack -c Release --no-restore -p:PackageVersion=$package_version
    - name: Deploy Nuget
      run: dotnet nuget push BTrees/bin/Release/*.nupkg --skip-duplicate -k ${{ secrets.GITHUB_TOKEN }} -s https://nuget.pkg.github.com/marklauter/index.json
